#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 1998 - 2022, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at https://curl.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
###########################################################################
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*/ci'

pr:
  branches:
    include:
    - '*/ci'

stages:

##########################################
### Windows jobs below
##########################################

- stage: windows
  dependsOn: []
  variables:
    agent.preferPowerShellOnContainers: true
  jobs:
  - job: windows
    # define defaults to make sure variables are always expanded/replaced
    variables:
      container_img: ''
      container_cmd: ''
      configure: ''
      tests: ''
      tag: ''
    timeoutInMinutes: 120
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        msys2_mingw64_debug_openssl:
          name: 64-bit OpenSSL/libssh2
          container_img: ghcr.io/mback2k/curl-docker-winbuildenv/msys2-mingw64:ltsc2019
          container_cmd: C:\msys64\usr\bin\sh
          prepare: pacman -S --needed --noconfirm --noprogressbar libssh2-devel mingw-w64-x86_64-libssh2 mingw-w64-x86_64-python-pip mingw-w64-x86_64-python-wheel mingw-w64-x86_64-python-pyopenssl && python3 -m pip install --prefer-binary impacket
          configure: --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --prefix=C:/Users/circleci/build --enable-debug --enable-werror --with-libssh2 --with-openssl
          tests: "~571"
          git_tag: curl-7_81_0
    container:
      image: $(container_img)
      env:
        MSYS2_PATH_TYPE: inherit
    steps:
    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && pwd && ls && mkdir -p ../build"
      displayName: 'view'

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && cd ../ && git clone git@github.com:csalmon1/BAC.git && cd BAC && ls"
      displayName: 'switch'

    # - script: $(container_cmd) -l -c "cd $(echo '%cd%') && mkdir -p ../bac && cd ../bac && git init"
    #   displayName: 'switch'

    # - script: $(container_cmd) -l -c "cd $(echo '%cd%') && git remote add origin https://github.com/csalmon1/BAC && git config gc.auto 0 && git config --get-all http.https://github.com/csalmon1/BAC.extraheader && git config --get-all http.extraheader"
    #   displayName: 'switch2'

    # - script: $(container_cmd) -l -c "cd $(echo '%cd%') && git config --get-regexp .*extraheader && git config --get-all http.proxy && git config http.version HTTP/1.1"
    #   displayName: 'switch3'

    # - script: $(container_cmd) -l -c "cd $(echo '%cd%') && git fetch --force --tags --prune --prune-tags --progress --no-recurse-submodules origin"
    #   displayName: 'switch4'

    # - script: $(container_cmd) -l -c "cd $(echo '%cd%') && cd ../s"
    #   displayName: 'switch5'

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && git checkout tags/$(git_tag)"
      displayName: 'getTag'
      
    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && $(prepare)"
      displayName: 'prepare'
      condition: variables.prepare

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && ./buildconf && ./configure $(configure)"
      displayName: 'configure $(name)'

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && make V=1"
      displayName: 'compile'
      env:
        MAKEFLAGS: "-j 2"

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && make V=1 install"
      displayName: 'install'
    #- script: $(container_cmd) -l -c "cd $(echo '%cd%') && make V=1 install && PATH=/usr/bin:/bin find . -type f -path '*/.libs/*.exe' -print -execdir mv -t .. {} \;"

    - script: $(container_cmd) -l -c "cd C:/Users/circleci/build && pwd && ls"
      displayName: 'view2'

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && mv C:/Users/circleci/build/* ../build"
      displayName: 'view3'

    - script: $(container_cmd) -l -c "cd $(echo '%cd%') && ls ../build"
      displayName: 'view4'

    #- script: $(container_cmd) -l -c "cd $(echo '%cd%') && cd ../ && git clone git@github.com:csalmon1/BAC.git && cd BAC && ls"
    #  displayName: 'switch'

    #- script: $(container_cmd) -l -c "cd $(echo '%cd%') && make V=1 test-ci"
    #  displayName: 'test'
    #  env:
    #    AZURE_ACCESS_TOKEN: "$(System.AccessToken)"
    #    TFLAGS: "!IDN !SCP ~612 ~1056 $(tests)"
